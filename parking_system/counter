----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 04/09/2024 11:49:25 PM
-- Design Name: 
-- Module Name: counter - Behavioral
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.std_logic_unsigned.all;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity counter is
  generic(
    nbit : integer := 4
  );
  Port ( 
    clk : in std_logic;
    rst : in std_logic;
    s1 : in std_logic;
    s2 : in std_logic;
    count : out std_logic_vector(nbit - 1 downto 0) 
  );
end counter;

architecture Behavioral of counter is

signal sig_count : std_logic_vector(nbit - 1 downto 0);

begin

   p_counter : process(clk)
   begin
       
       if rising_edge(clk) then
           if (rst = '1') then
                 sig_count <= (others => '0');
                 
           elsif (s1 = '1') then
                sig_count <= sig_count + 1;
                  
           elsif (s2 = '1') then
                sig_count <= sig_count - 1;   
           else
                sig_count <= sig_count;
           end if;         
      end if;
    end process;
        
	count <= sig_count;					
						
end Behavioral;
